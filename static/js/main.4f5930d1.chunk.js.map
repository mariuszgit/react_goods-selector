{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleClick","name","setState","this","className","type","onClick","map","good","btnClassName","cn","trClassName","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAOaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAA4B,CAC1BC,aAAc,OAFlB,EAKEC,YAAc,SAACC,GACT,EAAKH,MAAMC,eAAiBE,EAC9B,EAAKC,SAAS,CAAEH,aAAc,KAE9B,EAAKG,SAAS,CAAEH,aAAcE,KATpC,4CAaE,WAAU,IAAD,OACCF,EAAiBI,KAAKL,MAAtBC,aAER,OACE,uBAAMK,UAAU,oBAAhB,UACGL,EAEG,qBAAIK,UAAU,sCAAd,oBACML,EADN,gBAEE,wBACE,UAAQ,cACRM,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAM,EAAKN,YAAY,UAIpC,oBAAII,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SACE,gCACGR,EAAMW,KAAI,SAAAC,GACT,IAAMC,EAAeC,IAAG,SAAU,CAChC,UAAWF,IAAST,IAGhBY,EAAcD,IAAG,CACrB,+BAAgCF,IAAST,IAG3C,OACE,qBAAI,UAAQ,OAAkBK,UAAWO,EAAzC,UACE,6BACE,wBACE,UAASH,IAAST,EAAe,eAAiB,YAClDM,KAAK,SACLD,UAAWK,EACXH,QAAS,kBAAM,EAAKN,YAAYQ,IAJlC,SAMGA,IAAST,EAAe,IAAM,QAGnC,oBAAI,UAAQ,YAAYK,UAAU,eAAlC,SACGI,MAZmBA,iBA5CxC,GAAyBI,IAAMC,WCrB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4f5930d1.chunk.js","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype AppState = {\n  selectedGood: string\n};\n\nexport class App extends React.Component<{}, AppState> {\n  state: Readonly<AppState> = {\n    selectedGood: 'Jam',\n  };\n\n  handleClick = (name: string): void => {\n    if (this.state.selectedGood === name) {\n      this.setState({ selectedGood: '' });\n    } else {\n      this.setState({ selectedGood: name });\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={() => this.handleClick('')}\n              />\n            </h1>\n          )\n          : <h1 className=\"title\">No goods selected</h1>}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              const btnClassName = cn('button', {\n                'is-info': good === selectedGood,\n              });\n\n              const trClassName = cn({\n                'has-background-success-light': good === selectedGood,\n              });\n\n              return (\n                <tr data-cy=\"Good\" key={good} className={trClassName}>\n                  <td>\n                    <button\n                      data-cy={good === selectedGood ? 'RemoveButton' : 'AddButton'}\n                      type=\"button\"\n                      className={btnClassName}\n                      onClick={() => this.handleClick(good)}\n                    >\n                      {good === selectedGood ? '-' : '+'}\n                    </button>\n                  </td>\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}